[gd_scene load_steps=10 format=3 uid="uid://du6yi6rxcrpjj"]

[ext_resource type="Texture2D" uid="uid://baqa2mpjl23ie" path="res://assets/Floor_Tile_V3.png" id="1_8nuew"]
[ext_resource type="Shader" path="res://shadesrs/background.gdshader" id="2_uham5"]

[sub_resource type="GDScript" id="GDScript_8j87v"]
script/source = "extends Node

@export_group(\"chunk settings\")
@export var chunk_width: int = 64
@export var chunk_height: int = 64
@export var generation_radius: int = 2

@export_group(\"noise_settings\")
@export var noise: Noise

@onready var tile_map: TileMap = $TileMap
@onready var timer: Timer = $Timer

var generated_chunks: Array[Vector2i]
var player: CharacterBody2D

var player_chunk_pos

func _ready() -> void:
	player = get_tree().get_first_node_in_group(\"player\")
	
	player_chunk_pos = get_chunk_position(player.position)
	generate_chunks_in_radius(Vector2i(0, 0), 5)

func _process(delta: float) -> void:
	#var player_chunk_pos = get_chunk_position(player.position)
	#print(player_chunk_pos)
	generate_chunks_in_radius(player_chunk_pos, generation_radius)
	
	#if player_chunk_pos - Vector2i(generation_radius, generation_radius) not in generated_chunks

func generate_chunks_in_radius(starter_point: Vector2i, radius: int = generation_radius) -> void:
	#var player_pos = player.position
	#var current_chunk_pos = get_chunk_position(player_pos)	
	for x in range(-radius, radius + 1):
		for y in range(-radius, radius + 1):
			var chunk_pos = starter_point + Vector2i(x, y)
			generate_chunk(chunk_pos)

func get_chunk_position(pos: Vector2):
	var chunk_pos: Vector2 = Vector2(int(pos.x / (chunk_width * 16)), int(pos.y / (chunk_height * 16)))
	#print(pos)
	#print(pos.x / chunk_width)
	return chunk_pos

func generate_chunk(chunk_pos: Vector2i, width: int = chunk_width, height: int = chunk_height):
	var var1 = Vector2i(chunk_pos.x, chunk_pos.y)
	if var1 not in generated_chunks:
		var starter_pos: Vector2i = chunk_pos * Vector2i(width, height)
		#print(\"Generating chunk\")
		for x in width:
			for y in height:
				var current_pos: Vector2i = Vector2i(starter_pos.x + x, starter_pos.y + y)
				var noise_val: float = noise.get_noise_2d(current_pos.x, current_pos.y)
			
				if noise_val < .1:
					tile_map.set_cell(0, current_pos, 0, Vector2i(randi_range(0, 1), 1))
				else:
					tile_map.set_cell(0, current_pos, 0, Vector2i(randi_range(0, 1), 0))
			
		generated_chunks.append(chunk_pos)
		#print(generated_chunks)


func _on_timer_timeout() -> void:
	player_chunk_pos = get_chunk_position(player.position)
	#print(\"TIMERRRR\")
"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_hekin"]
noise_type = 0
frequency = 0.0914

[sub_resource type="FastNoiseLite" id="FastNoiseLite_b68jx"]
noise_type = 2
frequency = 0.0754

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_p73rh"]
noise = SubResource("FastNoiseLite_b68jx")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_lq4lg"]
shader = ExtResource("2_uham5")
shader_parameter/noise_texture = SubResource("NoiseTexture2D_p73rh")

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_x22os"]
texture = ExtResource("1_8nuew")
0:0/0 = 0
1:0/0 = 0
0:1/0 = 0
1:1/0 = 0

[sub_resource type="TileSet" id="TileSet_mxj7b"]
sources/0 = SubResource("TileSetAtlasSource_x22os")

[node name="background" type="Node"]
script = SubResource("GDScript_8j87v")
noise = SubResource("FastNoiseLite_hekin")

[node name="ParallaxBackground" type="ParallaxBackground" parent="."]
layer = 0

[node name="ParallaxLayer" type="ParallaxLayer" parent="ParallaxBackground"]
z_index = -3
motion_mirroring = Vector2(5000, 5000)

[node name="ColorRect" type="ColorRect" parent="ParallaxBackground/ParallaxLayer"]
material = SubResource("ShaderMaterial_lq4lg")
offset_right = 5000.0
offset_bottom = 5000.0
color = Color(0.25098, 0.321569, 0.329412, 0.498039)

[node name="Timer" type="Timer" parent="."]
wait_time = 4.0
autostart = true

[node name="TileMap" type="TileMap" parent="."]
z_index = -1000
tile_set = SubResource("TileSet_mxj7b")
format = 2
layer_0/z_index = -1

[connection signal="timeout" from="Timer" to="." method="_on_timer_timeout"]
